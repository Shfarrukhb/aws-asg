name: DevOps Challenge
on:
  push:
    branches:
      - main
env:
  dockerhub_u: ${{ secrets.dockerhub_u }}
  dockerhub_p: ${{ secrets.dockerhub_p }}
  aws_key: ${{ secrets.aws_key }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: image build
        uses: docker/setup-buildx-action@v1
      - name: dockerhub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.dockerhub_u }}
          password: ${{ secrets.dockerhub_p }}
      - name: Image build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: ${{ secrets.dockerhub_u }}/flask:$GITHUB_RUN_NUMBER
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: checkout 
      uses: actions/checkout@v2
    - name: dockerhub login
      uses: docker/login-action@v1
      with:
        username: ${{ env.dockerhub_u }}
        password: ${{ env.dockerhub_p }}
    - name: setting permissions for a key
      run: |
        echo "${{ env.aws_key }}" > key.pem
        chmod 600 key.pem
    - name: image pull
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@your-ec2-instance-ip 'sudo docker pull ${{ secrets.dockerhub_u }}/flask:$GITHUB_RUN_NUMBER'
    - name: Stop running container
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@your-ec2-instance-ip 'sudo docker stop cddemo || true'
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@your-ec2-instance-ip 'sudo docker rm cddemo || true'
    - name: Run new container
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@your-ec2-instance-ip 'sudo docker run -d --name cddemo -p 80:3000 ${{ secrets.dockerhub_u }}/flask:$GITHUB_RUN_NUMBER'